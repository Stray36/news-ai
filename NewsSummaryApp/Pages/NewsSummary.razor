@page "/newssummary"
@using System.Text.Json
@using System.Text
@inject HttpClient Http

<h3>Find News</h3>

<div>
    <input @bind="searchQuery" @bind:event="oninput" placeholder="Search news..." />
    <button @onclick="SearchNews">Search</button>
</div>

@if (!string.IsNullOrEmpty(searchResult))
{
    <div>
        <pre>@searchResult</pre>
    </div>
}
else if (isLoading)
{
    <p>Loading...</p>
}
else if (!string.IsNullOrEmpty(searchQuery) && string.IsNullOrEmpty(searchResult))
{
    <p>No results found for "@searchQuery".</p>
}

@code {
    private string searchQuery = string.Empty;
    private string searchResult = string.Empty;
    private bool isLoading = false;

    private async Task SearchNews()
    {
        if (!string.IsNullOrEmpty(searchQuery))
        {
            isLoading = true;
            searchResult = string.Empty;

            try
            {
                // 构建请求内容
                var content = new StringContent(searchQuery, Encoding.UTF8, "application/json");
                // 发送请求并获取响应
                var response = await Http.PostAsync("https://localhost:8080/ui/search.html", content);
                response.EnsureSuccessStatusCode();
                // 读取响应内容
                searchResult = await response.Content.ReadAsStringAsync();
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine($"Error fetching news: {ex.Message}");
                searchResult = $"Error: {ex.Message}";
            }
            finally
            {
                isLoading = false;
            }
        }
    }
}